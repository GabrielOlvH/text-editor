import { LineEdit, VerticalBox, HorizontalBox, ScrollView } from "std-widgets.slint";
import { Themes } from "styling.slint";


export struct FileTreeItemData {
    name: string,
    ident: int,
    index: int,
    full-path: string,
    open: bool,
    type: string}

export component FileTreeItem inherits Rectangle {
    in-out property <string> text;
    in property <int> ident;
    property <int> spacing-size: 16;
    in-out property <FileTreeItemData> file;

    callback clicked();

    TouchArea {
        height: 16px;

        clicked => {
            root.clicked();
        }

        states [
            active when !self.has-hover && file.open: {
                rect.background: darkgray;
            }
            active when self.has-hover: {
                rect.background: Themes.selected.highlight-color;
            }
        ]

        rect := Rectangle {
            animate background { duration: 250ms; }
            border-radius: 5px;
            x: 0;
            height: 22px;
            img := Image {
                colorize: Themes.selected.font-color;
                x: ident * 16px + 5px;
                width: 16px;
                height: 16px;
                init => {
                    if (file.type == "folder") {
                        self.source = @image-url("icons/folder.png");
                    } else {
                        self.source = @image-url("icons/file.png");
                    }
                }
            }

            input := TextInput {
                y: 4px;
                color: Themes.selected.font-color;
                font-family: "Consolas";
                font-size: 15px;
                x: ident * 16px + 20px + 5px;
                enabled: false;
                text: root.text;
                init => {
                    root.width = self.x + self.width - 20px;
                }
            }
        }
    }
}

export component FileTree inherits Rectangle {
    opacity: 90%;
    in-out property <[FileTreeItemData]> files;
    callback clicked(int);
    background: Themes.selected.secondary-color;
    animate background { duration: 250ms; }
    border-radius: 5px;

    scroll := ScrollView {
        width: root.width;
        height: root.height - 12px;

        VerticalBox {

            spacing: 3px;
            for file in files: FileTreeItem {
                text: file.name;
                ident: file.ident;
                file: file;
                min-height: 18px;
                max-height: 18px;
                width: root.width - 28px;
                clicked => {
                    root.clicked(file.index);
                }
            }
        }
    }
}
